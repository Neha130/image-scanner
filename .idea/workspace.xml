<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f021f5c5-5adf-4e9c-bc1e-58069a9fdc1c" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/AUTHORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/NOTICE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/configfile/file.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/configfile/file_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/configfile/file_windows.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/credentials.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/default_store.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/default_store_darwin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/default_store_linux.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/default_store_unsupported.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/default_store_windows.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/file_store.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/credentials/native_store.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/cli/cli/config/types/authconfig.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/distribution/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/distribution/registry/client/auth/challenge/addr.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/distribution/registry/client/auth/challenge/authchallenge.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/client/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/client/command.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/credentials/credentials.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/credentials/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/credentials/helper.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker-credential-helpers/credentials/version.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/AUTHORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/NOTICE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_linux.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_others.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_windows.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/internal/and/and_closer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/internal/gzip/zip.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/internal/redact/redact.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/internal/retry/retry.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/internal/retry/wait/kubernetes_apimachinery_wait.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/internal/verify/verify.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/anon.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/auth.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/authn.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/basic.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/bearer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/keychain.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/authn/multikeychain.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/logs/logs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/check.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/digest.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/options.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/ref.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/registry.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/repository.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/name/tag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/hash.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/image.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/index.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/layer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/manifest.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/match/match.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/compressed.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/image.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/index.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/uncompressed.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/partial/with.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/platform.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/progress.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/catalog.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/check.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/delete.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/descriptor.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/image.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/index.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/layer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/list.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/mount.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/multi_write.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/options.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/basic.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/bearer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/logger.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/ping.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/retry.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/schemer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/scope.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/transport.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/transport/useragent.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/remote/write.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/stream/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/stream/layer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/types/types.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/google/go-containerregistry/pkg/v1/zz_deepcopy_generated.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/.mailmap" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/.pullapprove.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/CONTRIBUTING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/LICENSE.docs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/MAINTAINERS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/algorithm.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digest.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/digester.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/go-digest/verifiers.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/annotations.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/descriptor.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/index.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/layout.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/manifest.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/mediatype.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/version.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/versioned.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/appveyor.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/go113.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/pkg/errors/stack.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sync/AUTHORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sync/CONTRIBUTORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sync/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sync/PATENTS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sync/errgroup/errgroup.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Wire.go" beforeDir="false" afterPath="$PROJECT_DIR$/Wire.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/RestHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/RestHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/image-scanner" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/clairService/ClairService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/clairService/ClairService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/klarService/KlarService.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pubsub/NatSubscription.go" beforeDir="false" afterPath="$PROJECT_DIR$/pubsub/NatSubscription.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pubsub/TestPublish.go" beforeDir="false" afterPath="$PROJECT_DIR$/pubsub/TestPublish.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/wire_gen.go" beforeDir="false" afterPath="$PROJECT_DIR$/wire_gen.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1jRnjTKC7YPLNx5z0NU0R5TeX6y" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.dep.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="go.vgo" />
  </component>
  <component name="RunManager">
    <configuration name="go build github.com/devtron-labs/image-scanner" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="image-scanner" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="PG_PASSWORD" value="dWNQcjhrL3lId0s0cEdodDFHZXJkVGkzZXQwPQo" />
        <env name="PG_USER" value="postgres" />
      </envs>
      <kind value="DIRECTORY" />
      <package value="github.com/devtron-labs/image-scanner" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>112</line>
          <option name="timeStamp" value="31" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>113</line>
          <option name="timeStamp" value="32" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>117</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>118</line>
          <option name="timeStamp" value="34" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>122</line>
          <option name="timeStamp" value="35" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>123</line>
          <option name="timeStamp" value="37" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>136</line>
          <option name="timeStamp" value="38" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>145</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/klarService/KlarService.go</url>
          <line>144</line>
          <option name="timeStamp" value="40" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>