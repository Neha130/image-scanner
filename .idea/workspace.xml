<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4c4a8012-891b-4327-b4b2-d4ac8f388e85" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/distribution/registry/client/auth/challenge/authchallenge.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/distribution/registry/client/auth/challenge/authchallenge.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_others.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_others.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/homedir/homedir_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/index.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/index.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/manifest.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/v1/manifest.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/opencontainers/image-spec/specs-go/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/LICENSE.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/bitbucket-pipelines.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/doc.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/doc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/mechanism.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/mechanism.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/negotiator.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/negotiator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/nonce.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/nonce.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/options.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/options.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/plain.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/plain.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/scram.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/scram.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/xor_generic.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/mellium.im/sasl/xor_generic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/mellium.im/sasl/xor_unaligned.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2aqrg5mYZKJaVOdITJ1OTd7fA65" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.vendoring.notification.had.been.shown": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/adityaranjan/go/src/github.com/devtron-labs/image-scanner",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>